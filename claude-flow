#!/usr/bin/env bash
# Claude-Flow local wrapper with TTY fix
# This script ensures claude-flow runs from your project directory with proper TTY

# Save the current directory
PROJECT_DIR="${PWD}"

# Set environment to ensure correct working directory
export PWD="${PROJECT_DIR}"
export CLAUDE_WORKING_DIR="${PROJECT_DIR}"

# Function to run claude-flow with proper TTY allocation
run_claude_flow() {
  local cmd="$1"
  shift
  
  # Check if we're in a TTY
  if [ -t 0 ] && [ -t 1 ]; then
    # Already have TTY, run normally
    exec "$cmd" "$@"
  else
    # No TTY, use script command to allocate one
    if [[ "$OSTYPE" == "darwin"* ]]; then
      # macOS
      exec script -q /dev/null "$cmd" "$@"
    else
      # Linux
      exec script -qefc "$cmd $*" /dev/null
    fi
  fi
}

# Try to find claude-flow
# 1. Local node_modules
if [ -f "${PROJECT_DIR}/node_modules/.bin/claude-flow" ]; then
  cd "${PROJECT_DIR}"
  run_claude_flow "${PROJECT_DIR}/node_modules/.bin/claude-flow" "$@"

# 2. Global installation
elif command -v claude-flow &> /dev/null; then
  cd "${PROJECT_DIR}"
  run_claude_flow "claude-flow" "$@"

# 3. Fallback to npx
else
  cd "${PROJECT_DIR}"
  run_claude_flow "npx claude-flow@latest" "$@"
fi
